REWRITE TRY 2
-------------
-The first rewrite didn't work out so well, at least the cairo aspect.  Therefore, here is the plan for the second rewrite.

PROBLEMS
--------
-Some widgets, such as label and button, do a lot of initialization in the on_add callback.  This isn't optimal, because there is a lot of duplication of code.
-Cairo doesn't like not knowing what parts of what its drawing to are visible, unlike Xft, resulting in segv's at random times.
-The mixing of C-style function-based callbacks and Objective-C classes seems sub-optimal, but I can't quite come up with a solution.  I DEFINATLY do NOT want
to go all MFC and make all widgets derive from a base and have callbacks in the class, that would be a nightmare.
-I don't really like using Cairo for text rendering, as the "toy" text API is going to become deprecated, and I really don't want to use old APIs.  The only other
choices, though, are plain Xft, which is a nightmare, and Pango, which would also be a nightmare, as it brings with it all of glib and company.
-On the other hand, zwl will need some kind of image-loading support eventually, and cairo can help us with that.

SOLUTIONS/PLAN OF ACTION
------------------------
-Continue to use Cairo as text renderer, as Pango/Xft don't have XCB bindings
-Continue to use the on_add callback method, but rework it a bit to cut down on the redundant code, maybe with some helper-functions that can be used to
create windows with XCB and such.  Upon further inspection, its really not so bad if the helper-functions get done.
